stages:
  - build_and_test

variables:
  GIT_DEPTH: "1"
  GIT_SUBMODULE_STRATEGY: "recursive"
  # uses registry.gitlab.syncad.com/hive/haf/ci-base-image:ubuntu20.04-5 
  BUILDER_IMAGE_TAG: "@sha256:a22b174d15ad9878f878e798e297d2134da132174802abff0923ea214e2f4543"
  SETUP_SCRIPTS_PATH: "$CI_PROJECT_DIR/haf/scripts"
  REGISTRY: registry.gitlab.syncad.com/hive/hafah
  HAFAH_IMAGE: $REGISTRY/instance:$CI_COMMIT_SHORT_SHA
  HAFAH_PORT: 6543
  HAF_POSTGRES_URL: postgresql://hive@haf-instance:5432/haf_block_log

include:
  - project: 'hive/haf'
    ref: bw_hived_dockerized_deployment
    file: '/scripts/ci-helpers/prepare_data_image_job.yml'

  - project: 'hive/hive'
    ref: bw_hived_dockerized_deployment
    file: '/scripts/ci-helpers/prepare_data_image_job.yml'

prepare_hived_image:
  extends: .prepare_hived_data_5m_image
  stage: build_and_test
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/haf/hive"
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_CI_IMGBUILDER_PASSWORD

  tags:
    - public-runner-docker
    - hived-for-tests

prepare_haf_image:
  extends: .prepare_haf_data_5m_image
  stage: build_and_test
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/haf"
    REGISTRY_USER: "$CI_IMG_BUILDER_USER"
    REGISTRY_PASS: $CI_IMG_BUILDER_PASSWORD

  tags:
    - public-runner-docker
    - hived-for-tests

prepare_hafah_image:
  extends: .docker_image_builder_job
  stage: build_and_test

  script:
    - docker build --build-arg HTTP_PORT=$HAFAH_PORT --build-arg POSTGRES_URL="$HAF_POSTGRES_URL" --target=instance -t $HAFAH_IMAGE -f Dockerfile . 
    - echo $HAFAH_CI_IMG_BUILDER_PASSWORD | docker login -u $HAFAH_CI_IMG_BUILDER_USER $REGISTRY --password-stdin
    - docker push $HAFAH_IMAGE
  tags:
    - public-runner-docker
    - hived-for-tests

patterns_tests:
  extends: .docker_image_builder_job
  stage: build_and_test
  variables:
    AH_ENDPOINT: hafah_app:$HAFAH_PORT
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/haf/hive/tests/test_tools/package"

  needs:
    - job: prepare_hafah_image
    - job: prepare_haf_image
      artifacts: true

  services:
    - name: $HAF_IMAGE_NAME
      alias: haf-instance

    - name: $HAFAH_IMAGE
      alias: hafah_app

  before_script:
    - apk update && apk add bash git ca-certificates curl build-base python3-dev
    - python3 -m ensurepip
    - pip3 install tox

  script:
    - pip3 install -r $CI_PROJECT_DIR/haf/hive/tests/api_tests/comparsion_tests/requirements.txt
    # run pattern tests
    - cd $CI_PROJECT_DIR/haf/hive/tests/api_tests/pattern_tests
    - ./run_tests.sh $AH_ENDPOINT `git rev-parse --show-toplevel` && mv $CI_PROJECT_DIR/haf/hive/tests/api_tests/results.xml $CI_PROJECT_DIR/results.xml

  artifacts:
    when: always
    reports:
      junit: $CI_PROJECT_DIR/results.xml
    paths:
    - "$CI_JOB_NAME"
    - "**/from_node.log"
    - "**/ah.log"
    - "**/*.out.json"
    - "$CI_PROJECT_DIR/haf/hive/tests/tests_api/hived/workdir_*"
    when: always
    expire_in: 6 hours
  tags:
    - public-runner-docker
    - hived-for-tests

comparison_tests:
  extends: .docker_image_builder_job
  stage: build_and_test
  variables:
    AH_ENDPOINT: hafah_app:$HAFAH_PORT
    HIVED_ENDPOINT: hived-instance:8090
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/haf/hive/tests/test_tools/package"

  needs:
    - job: prepare_hafah_image
    - job: prepare_haf_image
      artifacts: true
    - job: prepare_hived_image
      artifacts: true

  services:
    - name: $HAF_IMAGE_NAME
      alias: haf-instance

    - name: $HAFAH_IMAGE
      alias: hafah_app

    - name: $HIVED_IMAGE_NAME
      alias: hived-instance

  before_script:
    - apk update && apk add bash git ca-certificates curl build-base python3-dev
    - python3 -m ensurepip
    - pip3 install tox

  script:
    - pip3 install -r $CI_PROJECT_DIR/haf/hive/tests/api_tests/comparsion_tests/requirements.txt "$CI_PROJECT_DIR/haf/hive/tests/test_tools"
      # run comparsion tests
    - cd $CI_PROJECT_DIR/haf/hive/tests/api_tests/comparsion_tests
    - python3 -m pytest -n 8 --ref http://$HIVED_ENDPOINT --test http://$AH_ENDPOINT --start 4900000 --stop 4915000 --junitxml=$CI_PROJECT_DIR/comparsion_tests.xml

  artifacts:
    when: always
    reports:
      junit:
        - $CI_PROJECT_DIR/comparsion_tests.xml

    paths:
    - "$CI_JOB_NAME"
    - "**/from_node.log"
    - "**/ah.log"
    - "**/*.out.json"
    - "$CI_PROJECT_DIR/haf/hive/tests/tests_api/hived/workdir_*"
    when: always
    expire_in: 6 hours
  tags:
    - public-runner-docker
    - hived-for-tests
