stages:
  - build
  - test

variables:
  GIT_DEPTH: "1"
  GIT_SUBMODULE_STRATEGY: "recursive"
  # uses registry.gitlab.syncad.com/hive/haf/ci-base-image:ubuntu20.04-5
  BUILDER_IMAGE_TAG: "@sha256:6b557af6a98188c118d442b68437bf1b20d67e3aae5765269c4fe88465c62d60"
  SETUP_SCRIPTS_PATH: "$CI_PROJECT_DIR/haf/scripts"
  REGISTRY: registry.gitlab.syncad.com/hive/hafah
  HAFAH_PORT: 6543
  HAF_POSTGRES_URL: postgresql://haf_app_admin@haf-instance:5432/haf_block_log
  CACHED_BENCHMARK_DIR: "$CI_PROJECT_DIR/cached"

include:
  - project: 'hive/haf'
    ref: develop
    file: '/scripts/ci-helpers/prepare_data_image_job.yml'

  - project: 'hive/hive'
    ref: develop
    file: '/scripts/ci-helpers/prepare_data_image_job.yml'

prepare_hived_image:
  extends: .prepare_hived_data_5m_image
  stage: build
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/haf/hive"
    REGISTRY_USER: "$HIVED_CI_IMGBUILDER_USER"
    REGISTRY_PASS: $HIVED_CI_IMGBUILDER_PASSWORD

  tags:
    - public-runner-docker
    - hived-for-tests

prepare_haf_image:
  extends: .prepare_haf_data_5m_image
  stage: build
  variables:
    SUBMODULE_DIR: "$CI_PROJECT_DIR/haf"
    REGISTRY_USER: "$CI_IMG_BUILDER_USER"
    REGISTRY_PASS: $CI_IMG_BUILDER_PASSWORD

  tags:
    - public-runner-docker
    - hived-for-tests

.prepare_hafah_image:
  extends: .docker_image_builder_job
  stage: build
  variables:
    HAFAH_IMAGE_NAME: ""
    USE_POSTGREST: 0

  script:
    - docker build --build-arg USE_POSTGREST=$USE_POSTGREST --build-arg HTTP_PORT=$HAFAH_PORT --build-arg POSTGRES_URL="$HAF_POSTGRES_URL" --target=instance -t $HAFAH_IMAGE_NAME -f Dockerfile .
    - echo $HAFAH_CI_IMG_BUILDER_PASSWORD | docker login -u $HAFAH_CI_IMG_BUILDER_USER $REGISTRY --password-stdin
    - docker push $HAFAH_IMAGE_NAME
    - echo "HAFAH_IMAGE_NAME=$HAFAH_IMAGE_NAME" > docker_image_name.env

  artifacts:
    reports:
      dotenv: docker_image_name.env
    expire_in: 6 hours

  tags:
    - public-runner-docker
    - hived-for-tests

prepare_benchmark_environ:
  extends: .docker_image_builder_job
  stage: build

  before_script:
    - apk update && apk add bash ca-certificates wget unzip openjdk11-jre openjdk11-jdk maven git python3 py3-pip

  script:
    - mkdir -p $CACHED_BENCHMARK_DIR && cd $CACHED_BENCHMARK_DIR
    - chmod a+x $CI_PROJECT_DIR/scripts/setup_jmeter.bash && $CI_PROJECT_DIR/scripts/setup_jmeter.bash
    - chmod a+x $CI_PROJECT_DIR/scripts/setup_m2u.bash && $CI_PROJECT_DIR/scripts/setup_m2u.bash

  cache:
    key: bench-tools
    paths:
      - "$CACHED_BENCHMARK_DIR/"

  artifacts:
    paths:
      - "$CACHED_BENCHMARK_DIR/"
    expire_in: 6 hours

  tags:
    - public-runner-docker
    - hived-for-tests

prepare_python_hafah_image:
  extends: .prepare_hafah_image
  variables:
    HAFAH_IMAGE_NAME: $REGISTRY/python-instance:$CI_COMMIT_SHORT_SHA
    USE_POSTGREST: 0

prepare_postgrest_hafah_image:
  extends: .prepare_hafah_image
  variables:
    HAFAH_IMAGE_NAME: $REGISTRY/postgrest-instance:$CI_COMMIT_SHORT_SHA
    USE_POSTGREST: 1

.patterns_tests:
  extends: .docker_image_builder_job
  stage: test
  variables:
    AH_ENDPOINT: hafah_app:$HAFAH_PORT
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/haf/hive/tests/test_tools/package"
    HAFAH_IMAGE: ""

  needs:
    - job: prepare_haf_image
      artifacts: true

  services:
    - name: $HAF_IMAGE_NAME
      alias: haf-instance
      variables:
        # Allow access from any network to eliminate CI IP addressing problems
        PG_ACCESS: "host    haf_block_log    haf_app_admin    0.0.0.0/0    trust"

    - name: $HAFAH_IMAGE
      alias: hafah_app

  before_script:
    - echo "HAfAH image name $HAFAH_IMAGE"
    - echo "HAF image name $HAF_IMAGE_NAME"
    - apk update && apk add bash git ca-certificates curl build-base python3-dev
    - python3 -m ensurepip
    - pip3 install tox

  script:
    - pip3 install -r $CI_PROJECT_DIR/haf/hive/tests/api_tests/comparsion_tests/requirements.txt
    # run pattern tests
    - cd $CI_PROJECT_DIR/haf/hive/tests/api_tests/pattern_tests
    - ./run_tests.sh $AH_ENDPOINT `git rev-parse --show-toplevel`

  artifacts:
    when: always
    reports:
      junit: $CI_PROJECT_DIR/haf/hive/tests/api_tests/pattern_tests/results.xml
    paths:
    - "$CI_JOB_NAME"
    - "**/from_node.log"
    - "**/ah.log"
    - "**/*.out.json"
    - "$CI_PROJECT_DIR/haf/hive/tests/tests_api/hived/workdir_*"
    when: always
    expire_in: 6 hours
  tags:
    - public-runner-docker
    - hived-for-tests

python_patterns_tests:
  extends: .patterns_tests

  needs:
    - !reference [.patterns_tests, needs]
    - job: prepare_python_hafah_image
      artifacts: true

  variables:
    HAFAH_IMAGE: $HAFAH_IMAGE_NAME

postgrest_patterns_tests:
  extends: .patterns_tests

  needs:
    - !reference [.patterns_tests, needs]
    - job: prepare_postgrest_hafah_image
      artifacts: true

  variables:
    HAFAH_IMAGE: $HAFAH_IMAGE_NAME

.comparison_tests:
  extends: .docker_image_builder_job
  stage: test
  variables:
    AH_ENDPOINT: hafah_app:$HAFAH_PORT
    HIVED_ENDPOINT: hived-instance:8090
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/haf/hive/tests/test_tools/package"
    HAFAH_IMAGE: ""

  needs:
    - job: prepare_haf_image
      artifacts: true
    - job: prepare_hived_image
      artifacts: true

  services:
    - name: $HAF_IMAGE_NAME
      alias: haf-instance
      variables:
        # Allow access from any network to eliminate CI IP addressing problems
        PG_ACCESS: "host    haf_block_log    haf_app_admin    0.0.0.0/0    trust"

    - name: $HAFAH_IMAGE
      alias: hafah_app

    - name: $HIVED_IMAGE_NAME
      alias: hived-instance

  before_script:
    - apk update && apk add bash git ca-certificates curl build-base python3-dev
    - python3 -m ensurepip
    - pip3 install tox

  script:
    - pip3 install -r $CI_PROJECT_DIR/haf/hive/tests/api_tests/comparsion_tests/requirements.txt "$CI_PROJECT_DIR/haf/hive/tests/test_tools"
      # run comparsion tests
    - cd $CI_PROJECT_DIR/haf/hive/tests/api_tests/comparsion_tests
    - python3 -m pytest -n 8 --ref http://$HIVED_ENDPOINT --test http://$AH_ENDPOINT --start 4900000 --stop 4915000 --junitxml=$CI_PROJECT_DIR/comparsion_tests.xml

  artifacts:
    when: always
    reports:
      junit:
        - $CI_PROJECT_DIR/comparsion_tests.xml

    paths:
    - "$CI_JOB_NAME"
    - "**/from_node.log"
    - "**/ah.log"
    - "**/*.out.json"
    - "$CI_PROJECT_DIR/haf/hive/tests/tests_api/hived/workdir_*"
    when: always
    expire_in: 6 hours
  tags:
    - public-runner-docker
    - hived-for-tests

python_comparison_tests:
  extends: .comparison_tests

  needs:
    - !reference [.comparison_tests, needs]
    - job: prepare_python_hafah_image
      artifacts: true

  variables:
    HAFAH_IMAGE: $HAFAH_IMAGE_NAME

postgrest_comparison_tests:
  extends: .comparison_tests

  needs:
    - !reference [.comparison_tests, needs]
    - job: prepare_postgrest_hafah_image
      artifacts: true

  variables:
    HAFAH_IMAGE: $HAFAH_IMAGE_NAME

.benchmark_tests:
  extends: .docker_image_builder_job
  stage: test
  variables:
    FF_NETWORK_PER_BUILD: 1
    PYTHONPATH: "$CI_PROJECT_DIR/haf/hive/tests/test_tools/package"
    HAFAH_IMAGE: ""
    CACHE_DIR: "$CI_PROJECT_DIR/cached"

  needs:
    - job: prepare_haf_image
      artifacts: true
    - job: prepare_benchmark_environ
      artifacts: true

  services:
    - name: $HAF_IMAGE_NAME
      alias: haf-instance
      variables:
        # Allow access from any network to eliminate CI IP addressing problems
        PG_ACCESS: "host    haf_block_log    haf_app_admin    0.0.0.0/0    trust"

    - name: $HAFAH_IMAGE
      alias: hafah_app

  before_script:
    - apk update && apk add bash ca-certificates wget unzip openjdk11-jre openjdk11-jdk maven git python3 py3-pip
    - pip3 install --user prettytable

  script:
    - |
      source $CACHED_BENCHMARK_DIR/jmeter/activate
      source $CACHED_BENCHMARK_DIR/m2u/activate
      $JMETER --version
      /usr/bin/python3 $CI_PROJECT_DIR/tests/performance_test.py -a hafah_app -p $HAFAH_PORT --no-launch -c perf_5M_heavy.csv -j $JMETER -d $CI_PROJECT_DIR/wdir
      $M2U --input wdir/raw_jmeter_report.xml --output wdir/jmeter_junit_report.xml

  artifacts:
    when: always
    reports:
      junit: $CI_PROJECT_DIR/wdir/jmeter_junit_report.xml
    paths:
      - $CI_PROJECT_DIR/wdir/
    when: always
    expire_in: 6 hours
  tags:
    - public-runner-docker
    - hived-for-tests

python_benchmark_tests:
  extends: .benchmark_tests

  needs:
    - !reference [.benchmark_tests, needs]
    - job: prepare_python_hafah_image
      artifacts: true

  variables:
    HAFAH_IMAGE: $HAFAH_IMAGE_NAME

postgrest_benchmark_tests:
  extends: .benchmark_tests

  needs:
    - !reference [.benchmark_tests, needs]
    - job: prepare_postgrest_hafah_image
      artifacts: true

  variables:
    HAFAH_IMAGE: $HAFAH_IMAGE_NAME
