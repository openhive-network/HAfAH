---
  test_name: Hivemind bridge_api.get_post_header gtg patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_post_header gtg
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_post_header"
          params: {"author":"gtg", "permlink":"missing-rewards-while-mining"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_post_header_gtg"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_discussion patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest
    - failing
    - xfail # gray

  includes:
    - !include common.yaml

  stages:
    - name: get_discussion
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_discussion"
          params: {"author":"steemit", "permlink":"firstpost"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_discussion"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_discussion gtg patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_discussion
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_discussion"
          params: {"author":"gtg", "permlink":"missing-rewards-while-mining"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_discussion_gtg"
            directory: "bridge_api_patterns"       
            
---
  test_name: Hivemind bridge_api.get_post patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_post
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_post"
          params: {"author":"steemit", "permlink":"firstpost"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_post"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_post gtg patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_post
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_post"
          params: {"author":"gtg", "permlink":"heavy-duty-witness-node-infrastructure"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_post_gtg"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_account_posts patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_account_posts
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_account_posts"
          params: {"sort":"posts", "account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_posts"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_account_posts sort blog patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_account_posts sort blog
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_account_posts"
          params: {"sort":"blog", "account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_posts_sort_blog"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_account_posts sort feed patterns test

  marks:
    - patterntest # should return posts, now its empty (hive3 hivemind)

  includes:
    - !include common.yaml

  stages:
    - name: get_account_posts sort feed
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_account_posts"
          params: {"sort":"feed", "account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_posts_sort_feed"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_account_posts sort comments patterns test

  marks:
    - patterntest # should return posts, now its empty (hive3 hivemind)

  includes:
    - !include common.yaml

  stages:
    - name: get_account_posts sort comments
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_account_posts"
          params: {"sort":"comments", "account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_posts_sort_comments"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_account_posts sort replies patterns test
      # not documented on https://developers.hive.io/apidefinitions/#apidefinitions-bridge
  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_account_posts sort replies
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_account_posts"
          params: {"sort":"replies", "account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_posts_sort_replies"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_account_posts sort payout patterns test

  marks:
    - patterntest # should return posts, now its empty (hive3 hivemind)

  includes:
    - !include common.yaml

  stages:
    - name: get_account_posts sort payout
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_account_posts"
          params: {"sort":"payout", "account":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_posts_sort_payout"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_ranked_posts patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"trending","tag":"","observer":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_ranked_posts sort invalid patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts sort invalid
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"invalid_sort","tag":"","observer":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_invalid_sort"
            directory: "bridge_api_patterns"
            error_response: true

---
  test_name: Hivemind bridge_api.get_ranked_posts hot patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts hot
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"hot","tag":"","observer":"alice"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_hot"
            directory: "bridge_api_patterns"
---
  test_name: Hivemind bridge_api.get_ranked_posts created patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts created
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"created","tag":"","observer":"alice"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_created"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_ranked_posts promoted patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts promoted
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"promoted"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_promoted"
            directory: "bridge_api_patterns"
---
  test_name: Hivemind bridge_api.get_ranked_posts payout patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts payout
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"payout"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_payout"
            directory: "bridge_api_patterns"
---
  test_name: Hivemind bridge_api.get_ranked_posts payout_comments patterns test

  marks:
    - patterntest
    - failing
    - xfail # gray

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts payout_comments
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"payout_comments"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_payout_comments"
            directory: "bridge_api_patterns"
---
  test_name: Hivemind bridge_api.get_ranked_posts muted patterns test

  marks:
    - patterntest
    - failing
    - xfail # empty results caused by lack of is_grayed handling (same as gray elsewhere)

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts muted
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"muted"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_muted"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_ranked_posts tag hive-123 patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts tag hive-123
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"trending","tag":"hive-123"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_tag_hive-123"
            directory: "bridge_api_patterns"

---
  test_name: Hivemind bridge_api.get_ranked_posts tag petrodollar patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_ranked_posts tag petrodollar
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "bridge.get_ranked_posts"
          params: {"sort":"trending","tag":"petrodollar","observer":"steemit"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_ranked_posts_tag_petrodollar"
            directory: "bridge_api_patterns"

# get_relationship_between_accounts is_blacklisted and follows_blacklists should be implemented after switching to tests over 5 mln blocks.
