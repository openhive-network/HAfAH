---
  test_name: Hivemind condenser_api.get_blog_entries patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_blog_entries
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "condenser_api.get_blog_entries"
          params: {"account":"steemit","start_entry_id":0,"limit":1}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_blog_entries"
            directory: "condenser_api_patterns"

---
  #should return reputation based on fat node, now is 0
  test_name: Hivemind condenser_api.get_account_reputations patterns test

  marks:
    - patterntest # fat node gives different answer (not only nonzero reputation but also json is generally different)

  includes:
    - !include common.yaml

  stages:
    - name: get_account_reputations
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "condenser_api.get_account_reputations"
          params: ["steemit", 1]
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_reputations"
            directory: "condenser_api_patterns"

---
  test_name: Hivemind condenser_api.get_reblogged_by patterns test

  marks:
    - patterntest
    - failing
    - xfail # reblogging does not work properly

  includes:
    - !include common.yaml

  stages:
    - name: get_reblogged_by
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "condenser_api.get_reblogged_by"
          params: {"author":"skypilot","permlink":"melting-rock"}
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_reblogged_by"
            directory: "condenser_api_patterns"

---
  test_name: Hivemind condenser_api.get_active_votes patterns test

  marks:
    - patterntest

  includes:
    - !include common.yaml

  stages:
    - name: get_active_votes
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "condenser_api.get_active_votes"
          params: ["biophil","test"]
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_active_votes"
            directory: "condenser_api_patterns"

---
  test_name: Hivemind deprecated condenser_api.get_account_votes 

  marks:
    - patterntest # we should probably change response to link to hive instead of steemit

  includes:
    - !include common.yaml

  stages:
    - name: get_account_votes deprecated
      request:
        url: "{service.proto:s}://{service.server:s}:{service.port}/"
        method: POST
        headers:
          content-type: application/json
        json:
          jsonrpc: "2.0"
          id: 1
          method: "condenser_api.get_account_votes"
          params: ["steemit"]
      response:
        status_code: 200
        verify_response_with:
          function: validate_response:compare_response_with_pattern
          extra_kwargs:
            method: "get_account_votes_deprecated"
            directory: "condenser_api_patterns"
            error_response: true
